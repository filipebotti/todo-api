{"version":3,"sources":["components/shared/colors.js","components/shared/input.js","components/shared/button.js","components/shared/task/container.js","components/shared/task/new-task.js","components/shared/task/task.js","actions/index.js","actions/auth.js","services/config/index.js","components/login/index.js","actions/register.js","components/register/index.js","actions/app.js","actions/task.js","components/task-list/index.js","components/main/index.js","components/task-detail/index.js","reducers/auth.js","reducers/user.js","reducers/tasks.js","reducers/index.js","services/api/auth.js","services/api/tasks.js","services/api/register.js","services/api/index.js","sagas/auth.js","sagas/tasks.js","sagas/app.js","sagas/register.js","sagas/index.js","App.js","serviceWorker.js","index.js"],"names":["Colors","StyledInput","styled","input","_templateObject","Input","_ref","value","onChange","placeholder","style","type","react_default","a","createElement","ButtonContainer","button","button_templateObject","ButtonText","span","_templateObject2","Button","text","onPress","disabled","children","onClick","TaskContainer","div","container_templateObject","container","opacity","TaskInput","new_task_templateObject","NewTask","onSubmitEditing","textRef","react_fontawesome_index_es","icon","fontSize","color","onKeyPress","ref","blurOnSubmit","TaskText","task_templateObject","props","isProcessing","ButtonWrapper","task_templateObject2","FlexButtonWrapper","_templateObject3","Task","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isChecked","task","deleted_at","renderCheckIcon","bind","assertThisInitialized","onChecked","setState","onCheckTask","display","description","React","Component","AUTH","AUTH_SUCCESS","AUTH_FAIL","SIGN_UP","SIGN_UP_SUCCESS","SIGN_UP_FAIL","SIGN_OUT","INITIAL_FETCH","TASKS_FETCH","TASKS_FETCH_SUCCESS","TASKS_FETCH_FAIL","TASK_ADD","TASK_ADD_SUCCESS","TASK_ADD_FAIL","TASK_REMOVE","TASK_REMOVE_SUCCESS","TASK_REMOVE_FAIL","TASK_UPDATE","TASK_UPDATE_SUCCESS","TASK_UPDATE_FAIL","auth","payload","types","USER","token","storeCredentials","credentials","localStorage","setItem","JSON","stringify","getStoredCredentials","parse","getItem","clear","removeItem","Container","login_templateObject","Header","login_templateObject2","FormWrapper","login_templateObject3","HeaderTitle","_templateObject4","Login","username","password","loading","handleLogin","renderLoginButtonChildren","authActions","nextProps","error","isAuthenticating","alert","user","isAuthenticated","history","push","Dots_default","size","_this2","onSubmit","input_Input","target","_ref2","button_Button","Link","to","textDecoration","withRouter","connect","dispatch","bindActionCreators","signUp","register_templateObject","register_templateObject2","register_templateObject3","register_templateObject4","Register","name","handleRegister","renderRegisterButtonChildren","registerActions","isRegistering","register_Container","register_Header","register_HeaderTitle","register_FormWrapper","_ref3","signOut","fetchTasks","addTask","removeTask","updateTask","task_list_templateObject","TaskList","handleNewTask","handleRemoveTask","newTaskDescription","onRefresh","event","key","taskActions","uuid","_taskInput","focus","task_list_Container","new_task","tasks","length","map","item","task_task","main_templateObject","main_templateObject2","Text","main_templateObject3","SignOutButton","main_templateObject4","Main","handleSignOut","appActions","main_Container","main_Header","task_list","Redirect","task_detail_templateObject","task_detail_templateObject2","task_detail_templateObject3","task_detail_templateObject4","TaskDetail","location","handleSave","renderButtonChildren","isFetching","goBack","task_detail_Container","task_detail_Header","task_detail_HeaderTitle","task_detail_FormWrapper","pathname","initialState","success","combineReducers","arguments","undefined","action","objectSpread","newTasks","toConsumableArray","concat","filter","_x","_auth","apply","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","getConfig","sent","abrupt","json","stop","then","catch","Promise","reject","_addTask","_x2","_removeTask","_callee2","_context2","id","_x3","_updateTask","_callee3","_context3","_signUp","method","body","headers","Headers","append","mode","api","authCalls","taskCalls","registerCalls","API_URL","doAuth","authSagas","data","API","access_token","put","t0","_marked","takeLatest","_marked2","fetchTasksAuth","tasks_marked","tasks_marked2","_data$task","_marked3","_context4","_marked4","_context5","_marked5","tasks_callee","_context6","takeEvery","_marked6","app_marked","app_callee","app_marked2","_action$payload","Error","register_marked","register_callee","register_marked2","rootSaga","fork","taskSagas","appSagas","registerSagas","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","sagas","library","add","faCheckSquare","faSignOutAlt","faSquare","faPlus","App","es","BrowserRouter","height","width","backgroundColor","Route","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3e440bb.chunk.js","sourcesContent":["const Colors = {\n    DARK_GREY: \"#424242\",\n    PURPLE: \"#673AB7\",\n    LIGHT_PURPLE: \"#EDE7F6\"\n}\n\nexport { Colors };","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from './colors'\n\nconst StyledInput = styled.input`\n    height:40px;\n    width: 15rem;\n    margin-bottom: 20px;\n    border-top-width:0px;\n    border-right-width: 0px;\n    border-left-width:0px;\n    border-bottom-width: 2px;\n    border-bottom-color: #673AB7;\n    color: ${Colors.DARK_GREY};\n    background-color: transparent;\n\n    :focus {\n        outline: none;\n    }\n`;\n\nconst Input = ({value, onChange, placeholder, style, type }) => {\n    return (\n        <StyledInput \n            value={value}\n            onChange={onChange}\n            placeholder={placeholder}\n            style={style}\n            type={type}\n        />\n    )\n};\n\nexport { Input };","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from './colors';\n\nconst ButtonContainer = styled.button`\n    height: 40px;\n    background-color: ${Colors.PURPLE};\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    display: flex;    \n    outline: none;\n    border: none;\n\n    :active {\n        background-color: ${Colors.LIGHT_PURPLE};\n        color: ${Colors.DARK_GREY};\n    }    \n`;\n\nconst ButtonText = styled.span`\n    font-size: 15px;\n    color: ${Colors.LIGHT_PURPLE};\n`;\n\nconst Button = ({text, onPress, disabled, children}) => {\n    return (\n        <ButtonContainer \n            onClick={onPress}\n            disabled={disabled}\n        >\n            {text && <ButtonText>{text}</ButtonText>}\n            {!text && children}\n        </ButtonContainer>\n    )\n}\n\nexport { Button, ButtonText }","import React from 'react';\nimport styled from 'styled-components';\n\nconst TaskContainer = styled.div`\n    height: 55px;\n    background-color: white;\n    border-radius: 3px;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: row;\n    padding: 0px 20px 0px 20px;\n    margin-bottom: 10px;\n    display: flex;\n    height: 40px;\n    width: 20rem;\n`;\n\nexport default ({opacity = 1, children}) => {\n    return (        \n        <TaskContainer>\n            {children}\n        </TaskContainer>        \n    );\n};\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../colors';\nimport TaskContainer from './container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst TaskInput = styled.input`\n    flex: 1;\n    font-size: 14px;\n    margin-left: 10px;\n    color: ${Colors.DARK_GREY}\n    border: none;\n\n    :focus {\n        outline: none;\n    }\n`;\n\nconst NewTask = ({ value, onChange, onSubmitEditing, textRef }) => {\n    return (\n        <TaskContainer>\n            <FontAwesomeIcon icon=\"plus\" style={{fontSize: '20px', color: Colors.DARK_GREY }}/>\n            <TaskInput \n                placeholder={\"Nova Tarefa...\"}\n                value={value}\n                onChange={onChange}\n                onKeyPress={onSubmitEditing}\n                ref={textRef}\n                blurOnSubmit={false}\n            />                    \n        </TaskContainer>\n    );\n};\n\nexport default  NewTask; ","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types'\nimport TaskContainer from './container';\n\n\nconst TaskText = styled.span`\n    font-size: 14px;\n    color: ${props => props.isProcessing ? Colors.LIGHT_PURPLE : Colors.DARK_GREY};\n`;\n\nconst ButtonWrapper = styled.button`\n    border: none;\n    outline: none;\n    padding: 0px;\n    justify-content: flex-start;\n`;\n\nconst FlexButtonWrapper = styled(ButtonWrapper)`\n    display: flex;\n    flex: 1;\n    margin-left: 10px;\n`;\n\nclass Task extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isChecked: props.task.deleted_at != null,\n        }\n\n        this.renderCheckIcon = this.renderCheckIcon.bind(this);\n        this.onChecked = this.onChecked.bind(this);\n    }\n\n    renderCheckIcon() {\n        const color = this.props.task.isProcessing ? Colors.LIGHT_PURPLE : Colors.DARK_GREY;\n        if(this.state.isChecked)\n            return <FontAwesomeIcon icon=\"check-square\" style={{fontSize: '24px', color }}/>\n        else\n            return <FontAwesomeIcon icon=\"square\" style={{fontSize: '24px', color }}/>\n    }\n\n    onChecked() {\n        this.setState ({\n            isChecked: true\n        });\n\n        if(this.props.onCheckTask)\n            this.props.onCheckTask(this.props.task);\n    }\n\n    render() {\n        return (\n            <TaskContainer>\n                <ButtonWrapper \n                    disabled={this.state.isChecked || this.props.task.isProcessing} \n                    onClick={this.onChecked}\n                >\n                    {this.renderCheckIcon()}\n                </ButtonWrapper>\n                <FlexButtonWrapper \n                    disabled={this.state.isChecked || this.props.task.isProcessing} \n                    onClick={this.props.onPress}\n                    style={{display: \"flex\"}}\n                >\n                    <TaskText isProcessing={this.props.task.isProcessing}>{this.props.task.description}</TaskText>           \n                </FlexButtonWrapper>\n            </TaskContainer>\n        )\n    }\n}\n\nTask.propTypes = {\n    task: PropTypes.object,\n    onCheckTask: PropTypes.func\n}\n\nexport default Task;","export const AUTH = \"vice/auth/AUTH\";\nexport const AUTH_SUCCESS = \"vice/auth/AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"vice/auth/AUTH_FAIL\";\n\nexport const SIGN_UP = \"vice/app/SIGN_UP\";\nexport const SIGN_UP_SUCCESS = \"vice/app/SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAIL = \"vice/app/SIGN_UP_FAIL\";\n\nexport const SIGN_OUT = \"vice/app/SIGN_OUT\";\n\n\nexport const INITIAL_FETCH = \"vice/tasks/INITIAL_FETCH\";\nexport const TASKS_FETCH = \"vice/task/TASKS_FETCH\";\nexport const TASKS_FETCH_SUCCESS = \"vice/tasks/TASKS_FETCH_SUCCESS\";\nexport const TASKS_FETCH_FAIL = \"vice/tasks/TASKS_FETCH_FAIL\";\n\nexport const TASK_ADD = \"vice/task/TASK_ADD\";\nexport const TASK_ADD_SUCCESS = \"vice/task/TASK_ADD_SUCCESS\";\nexport const TASK_ADD_FAIL = \"vice/task/TASK_ADD_FAIL\";\n\nexport const TASK_REMOVE = \"vice/task/TASK_REMOVE\";\nexport const TASK_REMOVE_SUCCESS = \"vice/task/TASK_REMOVE_SUCCESS\";\nexport const TASK_REMOVE_FAIL = \"vice/task/TASK_REMOVE_FAIL\";\n\nexport const TASK_UPDATE = \"vice/task/TASK_UPDATE\";\nexport const TASK_UPDATE_SUCCESS = \"vice/task/TASK_UPDATE_SUCCESS\";\nexport const TASK_UPDATE_FAIL = \"vice/task/TASK_UPDATE_FAIL\";\n","import * as types from './index'\n\nexport function auth(payload) {\n    return {\n        type: types.AUTH,\n        payload\n    }\n}","\nlet USER = {\n    token: '',\n    storeCredentials: (credentials) => {\n        localStorage.setItem('credentials', JSON.stringify(credentials));\n    },\n    getStoredCredentials: () => {\n\n        return JSON.parse(localStorage.getItem('credentials'));\n    },\n    clear: () => {\n        localStorage.removeItem('credentials');\n    }\n}\n\n// const API_URL = \"https://todo-api-vice.herokuapp.com\"\nconst API_URL = \"http://localhost:4000/api\"\n\n\nexport { USER, API_URL };","import React from 'react';\nimport styled from 'styled-components'\nimport { Button, Input, ButtonText, Colors } from '../shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as authActions from '../../actions/auth';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { USER } from '../../services/config';\nimport Dots from 'react-activity/lib/Dots';\nimport 'react-activity/lib/Dots/Dots.css';\n\nconst Container = styled.div`\n    \n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    display:flex;\n    flex-direction:column;\n\n`;\n\nconst Header = styled.div`\n\tflexDirection: row;\n    display: flex;\n    margin-bottom: 2rem;\n`;\n\nconst FormWrapper = styled.div`    \n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 2rem;\n`;\n\nconst HeaderTitle = styled.span`\n\tcolor: #320b86;\n\tfont-size: 26px;\n\tfont-weight: bold;\n`;\n\nclass Login extends React.Component {\n\n\tconstructor() {\n        super();\n\n        this.state = {\n            username: '',\n            password: '',\n            loading: true\n        }\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.renderLoginButtonChildren = this.renderLoginButtonChildren.bind(this);\n\t}\n\n    componentDidMount() {\n        let credentials = USER.getStoredCredentials();\n\n        if (credentials)\n            this.props.authActions.auth(credentials);\n        else \n            this.setState({ loading: false });\n    }\n\n    componentWillUpdate(nextProps) {\n    \n        if(nextProps.auth.error) {\n            if(this.state.loading) {\n                this.setState({ loading: false })\n            }\n\n            if(this.props.auth.isAuthenticating && !this.state.loading)\n                alert('Usuário ou senha incorreto.');\n        }\n\n        if(this.props.auth.isAuthenticating && nextProps.user.isAuthenticated) {\n            this.props.history.push(\"/\");\n            return false;\n        }\n\n        return true;\n    }\n\n    handleLogin() {        \n        this.props.authActions.auth(this.state);\n    }\n\n    renderLoginButtonChildren() {\n        if(!this.props.auth.isAuthenticating)\n            return <ButtonText>Entrar</ButtonText>;\n        else\n            return <Dots size={12} color={Colors.LIGHT_PURPLE}/>;\n    }\n\n    render() {\n\n        if(this.state.loading)\n            return (\n                <Container>\n                    <Dots size={12} color={Colors.DARK_GREY}/>\n                </Container>\n            );\n        else\n            return (\n                <Container onSubmit={this.handleLogin}>     \n                    <Header>\n                        <FontAwesomeIcon icon=\"check-square\" style={{fontSize: 26, color: '#320b86'}}/>\n                        <HeaderTitle>Tasker</HeaderTitle>\n                    </Header>\n                    \n                    <FormWrapper>\n                        <Input \n                            placeholder={\"Usuário\"}\n                            onChange={({target}) => this.setState({username: target.value })}\n                            value={this.state.username}\n                        />\n                        <Input \n                            placeholder={\"Senha\"}\n                            onChange={({target}) => this.setState({password: target.value })}\n                            value={this.state.password}\n                            type=\"password\"\n                        />\n                        <Button \n                            onPress={this.handleLogin}\n                            disabled={this.props.auth.isAuthenticating}\n                        >\n                            {this.renderLoginButtonChildren()}\n                        </Button>\n                    </FormWrapper>                    \n                    <Link to=\"/register\" style={{color: '#424242', textDecoration: \"none\"}}>Cadastre-se</Link>\n                    \n                </Container>\n            );\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        auth: state.auth,\n        user: state.user\n    }),\n    dispatch => ({\n        authActions: bindActionCreators(authActions, dispatch)\n    })\n)(Login));","import * as types from './index';\n\nexport function signUp(payload) {\n    return {\n        type: types.SIGN_UP,\n        payload\n    }\n}","import React from 'react';\nimport styled from 'styled-components'\nimport { Button, Input, ButtonText, Colors } from '../shared';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as registerActions from '../../actions/register';\nimport Dots from 'react-activity/lib/Dots';\nimport 'react-activity/lib/Dots/Dots.css';\n\nconst Container = styled.div`\n    \n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    display:flex;\n    flex-direction:column;\n\n`;\n\nconst Header = styled.div`\n\tflexDirection: row;\n    display: flex;\n    margin-bottom: 2rem;\n`;\n\nconst FormWrapper = styled.div`    \n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 2rem;\n`;\n\nconst HeaderTitle = styled.span`\n\tcolor: #320b86;\n\tfont-size: 26px;\n\tfont-weight: bold;\n`;\n\nclass Register extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            name: '',\n            password: '',\n            username: ''\n        }\n\n        this.handleRegister = this.handleRegister.bind(this);\n        this.renderRegisterButtonChildren = this.renderRegisterButtonChildren.bind(this);\n    }\n\n    handleRegister() {\n        this.props.registerActions.signUp({\n                username: this.state.username,\n                name: this.state.name,\n                password: this.state.password\n            }\n        );\n    }\n\n    componentWillUpdate(nextProps) {\n        if(nextProps.user.error && this.props.user.isRegistering) {\n            alert(nextProps.user.error);\n            return false;\n        }\n\n        if(this.props.user.isRegistering && nextProps.user.isAuthenticated) {\n            this.props.history.push(\"/\");\n            return false;\n        }\n\n        return true;\n    }\n\n    renderRegisterButtonChildren() {\n        if(!this.props.user.isRegistering)\n            return <ButtonText>Entrar</ButtonText>;\n        else\n            return <Dots size={12} color={Colors.LIGHT_PURPLE}/>;\n    }\n\n    render() {\n        return (\n            <Container>\n                <Header>                    \n                    <HeaderTitle>Registre-se</HeaderTitle>\n                </Header>\n                <FormWrapper>\n                    <Input \n                        placeholder={\"Usuário\"}\n                        onChange={({target}) => this.setState({username: target.value})}\n                        value={this.state.username}\n                    />\n                    <Input \n                        placeholder={\"Nome\"}\n                        onChange={({target}) => this.setState({name: target.value})}\n                        value={this.state.name}\n                    />\n                    <Input \n                        placeholder={\"Senha\"}\n                        onChange={({target}) => this.setState({password: target.value})}\n                        value={this.state.password}\n                        type=\"password\"\n                    />\n                    <Button text={\"Registrar\"}\n                        onPress={this.handleRegister}\n                        disabled={this.props.user.isRegistering}\n                    >\n                        {this.renderRegisterButtonChildren()}                    \n                    </Button>\n                </FormWrapper>                                                   \n                <Link to=\"/\" style={{color: '#424242', textDecoration: \"none\"}}>Cancelar</Link>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        user: state.user\n    }),\n    dispatch => ({\n        registerActions: bindActionCreators(registerActions, dispatch)\n    })\n)(Register));","import * as types from './index';\n\nexport function signOut() {\n    return {\n        type: types.SIGN_OUT\n    }\n}","import * as types from './index';\n\nexport function fetchTasks() {\n    return {\n        type: types.TASKS_FETCH\n    }\n}\n\nexport function addTask(task) {\n    return {\n        type: types.TASK_ADD,\n        task\n    }\n}\n\nexport function removeTask(task) {\n    return {\n        type: types.TASK_REMOVE,\n        task\n    }\n}\n\nexport function updateTask(task) {\n    return {\n        type: types.TASK_UPDATE,\n        task\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { NewTask, Task } from '../shared';\nimport uuid from 'uuid/v4';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as taskActions from '../../actions/task';\nimport { withRouter } from 'react-router-dom';\n\nconst Container = styled.div`\n    display:flex;\n    padding: 10px;\n    flex-direction: column;\n    align-items: center;\n`;\n\n\n\nclass TaskList extends React.Component {\n\n    constructor() {\n        super();\n\n        this.handleNewTask = this.handleNewTask.bind(this);\n        this.handleRemoveTask = this.handleRemoveTask.bind(this);\n        this.state = {\n            newTaskDescription: '',\n        }\n\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    handleNewTask(event) {\n        if(event.key === 'Enter' && this.state.newTaskDescription) {\n            this.props.taskActions.addTask({\n                description: this.state.newTaskDescription,\n                uuid: uuid(),\n                isProcessing: true\n            });\n            this.setState({ newTaskDescription: '' })\n            this._taskInput.focus();\n        }\n    }\n\n    handleRemoveTask(task) {\n        this.props.taskActions.removeTask(task);\n    }\n\n    onRefresh() {\n        this.props.taskActions.fetchTasks();\n    }\n\n    render() {\n        return( \n            <Container>\n                <NewTask\n                    value={this.state.newTaskDescription}\n                    onChange={({target}) => this.setState({ newTaskDescription: target.value })}\n                    onSubmitEditing={this.handleNewTask}\n                    textRef={ref => this._taskInput = ref}                      \n                />        \n                {this.props.task.tasks.length > 0 && this.props.task.tasks.map((item) => {\n                    return (\n                        <Task \n                            key={item.uuid} \n                            task={item} \n                            onCheckTask={() => this.handleRemoveTask(item)}\n                            onPress={() => { this.props.history.push('/task-detail', { item })}}\n                        />\n                    )\n                })}\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        task: state.task\n    }),\n    dispatch => ({\n        taskActions: bindActionCreators(taskActions, dispatch)\n    })\n)(TaskList));\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as appActions from '../../actions/app';\n\nimport TaskList from '../task-list';\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n`;\n\nconst Header = styled.div`\n    height: 70px;\n    background-color: ${Colors.PURPLE};\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: row;\n    padding-left: 32px;\n    padding-right: 10px;\n    display: flex;\n`\n\nconst Text = styled.span`\n    color: white;\n    font-size: 32px;\n    font-weight: bold;    \n    text-align: center;\n`;\n\nconst SignOutButton = styled.button`\n    background-color: transparent;\n    outline: none;\n    border: none;    \n`;\n\nclass Main extends React.Component {\n\n    constructor() {\n        super();\n\n        this.handleSignOut = this.handleSignOut.bind(this);\n    }\n\n    handleSignOut() {\n        this.props.appActions.signOut();\n    }\n\n    render() {\n        if (!this.props.user.isAuthenticated)\n            return <Redirect\n                        to=\"/auth\"\n                    />\n\n        return (\n            <Container>\n                <Header>   \n                    <div></div>                 \n                    <Text>Tasks</Text>\n                    <SignOutButton onClick={this.handleSignOut}>\n                        <FontAwesomeIcon icon=\"sign-out-alt\" style={{color: 'white', fontSize: \"22px\"}}/>\n                    </SignOutButton>\n                </Header>\n                <TaskList/>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        user: state.user\n    }),\n    dispatch => ({\n        appActions: bindActionCreators(appActions, dispatch)\n    })\n)(Main));","import React from 'react';\nimport styled from 'styled-components'\nimport { Button, Input, ButtonText, Colors } from '../shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Redirect, withRouter, Link } from 'react-router-dom';\nimport * as taskActions from '../../actions/task';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Dots from 'react-activity/lib/Dots';\nimport 'react-activity/lib/Dots/Dots.css';\n\nconst Container = styled.div`\n    \n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    display:flex;\n    flex-direction:column;\n\n`;\n\nconst Header = styled.div`\n\tflexDirection: row;\n    display: flex;\n    margin-bottom: 2rem;\n`;\n\nconst FormWrapper = styled.div`    \n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 2rem;\n`;\n\nconst HeaderTitle = styled.span`\n\tcolor: #320b86;\n\tfont-size: 26px;\n\tfont-weight: bold;\n`;\n\nclass TaskDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            description: props.location.state.item.description,\n        }\n\n        this.handleSave = this.handleSave.bind(this);\n        this.renderButtonChildren = this.renderButtonChildren.bind(this);\n    }\n\n    handleSave() {        \n\n        if(!this.state.description)\n            alert(\"Descrição é obrigatória\");\n        else {\n            this.props.location.state.item.description = this.state.description;\n            this.props.taskActions.updateTask(this.props.location.state.item);\n        }\n    }\n\n    componentWillUpdate(nextProps) {\n        if(this.props.task.isFetching && !nextProps.isFetching) {\n            if(nextProps.task.error) {\n                alert(nextProps.task.error);\n            }\n            else {\n                this.props.history.goBack();\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    renderButtonChildren() {\n        if(!this.props.task.isFetching)\n            return <ButtonText>Salvar</ButtonText>;\n        else\n            return <Dots size={12} color={Colors.LIGHT_PURPLE}/>\n    }\n\n    render() {\n\n        if (!this.props.user.isAuthenticated)\n            return <Redirect\n                        to={{\n                            pathname: \"/auth\",\n                        }}\n                    />\n\n        return (\n            <Container>\n                <Header>\n                    <FontAwesomeIcon icon=\"check-square\" style={{fontSize: \"26px\", color: '#320b86'}}/>\n                    <HeaderTitle>Detalhes</HeaderTitle>\n                </Header>\n                <FormWrapper>                    \n                    <Input \n                        placeholder={\"Descrição\"}\n                        onChange={({target}) => this.setState({description: target.value})}\n                        value={this.state.description}\n                    />\n                    <Button \n                        onPress={this.handleSave}\n                        disabled={this.props.task.isFetching}\n                    >\n                        {this.renderButtonChildren()}\n                    </Button>\n                </FormWrapper>\n                <Link to=\"/\" style={{color: '#424242', textDecoration: \"none\"}}>Cancelar</Link>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        task: state.task,\n        user: state.user\n    }),\n    dispatch => ({\n        taskActions: bindActionCreators(taskActions, dispatch)\n    })\n)(TaskDetail));","import * as types from '../actions';\n\nconst initialState = {\n    isAuthenticating: false,\n    error: '',\n    success: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case types.AUTH:\n            return { ...state, isAuthenticating: true, error: ''}\n        case types.AUTH_SUCCESS:\n            return { ...state, isAuthenticating: false, success: true }\n        case types.AUTH_FAIL:\n            return { ...state, isAuthenticating: false, success:false, error: action.error }\n        default:\n            return state;\n    }\n}","import * as types from '../actions';\n\nconst initialState = {\n    name: '',\n    isRegistering: false,\n    error: '',\n    isAuthenticated: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case types.AUTH_SUCCESS:\n            return { ...state, name: action.user ? action.user.name : '', isAuthenticated: true };\n        case types.SIGN_UP:\n            return { ...state, isRegistering: true, error: '', isAuthenticated: false }\n        case types.SIGN_UP_SUCCESS:\n            return { ...state, isRegistering: false, isAuthenticated: true }\n        case types.SIGN_UP_FAIL: \n            return { ...state, isRegistering: false, error: action.error }\n        case types.SIGN_OUT:\n            return { ...state, isAuthenticated: false }\n        default:\n            return state;\n    }\n}","import * as types from '../actions';\n\nconst initialState = {\n    tasks: [],\n    isFetching: false,\n    error: ''\n}\n\nexport default function(state = initialState, action) {\n\n    let tasks = [];\n    switch(action.type) {\n        case types.TASKS_FETCH:\n            return { ...state, isFetching: true };\n        case types.TASKS_FETCH_SUCCESS:\n            return { tasks: action.tasks, isFetching: false, error: '' };\n        case types.TASKS_FETCH_FAIL:\n            return { tasks: [], isFetching: false, error: action.error };\n        case types.TASK_ADD:\n            const newTasks = [ ...state.tasks, action.task ];\n            return { ...state, tasks: newTasks }\n        case types.TASK_ADD_SUCCESS:\n            tasks = state.tasks.filter(item => item.uuid !== action.task.uuid);\n            tasks = [ ...tasks, action.task ];\n            return { ...state, tasks }\n        case types.TASK_REMOVE:\n            tasks = state.tasks.filter(item => item.uuid !== action.task.uuid)\n            return { ...state, tasks }\n        case types.TASK_UPDATE:\n            return {...state, isFetching: true, error: ''}\n        case types.TASK_UPDATE_SUCCESS:            \n            return { ...state, isFetching: false }\n        case types.TASK_UPDATE_FAIL:\n            return { ...state, isFetching: false, error: action.error }\n        case types.SIGN_OUT: \n            return { ...state, tasks };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport user from './user';\nimport task from './tasks'\n\nexport default combineReducers({ auth, user, task });","import { getConfig } from './index';\n\nexport async function auth(credentials) {\n    \n    const response = await fetch(\n        `/api/auth`,\n        getConfig('POST', credentials)\n    );\n    \n    return response.json();\n    \n}","import { getConfig } from './index';\n\nexport function fetchTasks() {\n\n    return fetch(        \n        '/api/tasks',\n        getConfig()\n    ).then(response => response.json())\n    .catch(error => Promise.reject(error));\n}\n\nexport async function addTask(task) {\n\n    const response = await fetch(\n        `/api/tasks`,\n        getConfig('POST', task)\n    );\n\n    return response.json();\n}\n\nexport async function removeTask(task) {\n    \n    const response = await fetch(\n        `/api/tasks/${task.id}`,\n        getConfig('DELETE')\n    )\n\n    return response;\n}\n\nexport async function updateTask(task) {\n    const response = await fetch(\n        `/api/tasks/${task.id}`,\n        getConfig('PUT', task)\n    )\n\n    return response.json();\n}","import { getConfig } from './index';\n\nexport async function signUp(payload) {\n\n    const response = await fetch(\n        '/api/users',\n        getConfig('POST', payload)\n    );\n\n    return response.json();\n}","import { USER, API_URL } from '../config';\nimport * as authCalls from './auth';\nimport * as taskCalls from './tasks';\nimport * as registerCalls from './register';\n\nexport function getConfig(method = 'GET', body) {\n    \n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json; charset=utf-8\");\n    headers.append(\"Authorization\", USER.token || \"\");\n\n    return {\n        headers,\n        method,\n        body: JSON.stringify(body),\n        mode:'cors'\n    }\n}\nexport { USER, API_URL }\n\nexport default {\n    ...authCalls,\n    ...taskCalls,\n    ...registerCalls,\n    getConfig,\n    USER,\n    API_URL\n}","import { takeLatest, put } from 'redux-saga/effects';\nimport * as types from '../actions';\nimport API from '../services/api';\n\nfunction* doAuth(action) {\n  try{\n    const data = yield API.auth(action.payload);\n    \n    if(data.error)\n      throw data;\n\n    API.USER.token = data.access_token;\n    API.USER.storeCredentials(action.payload);\n\n    yield put({ type: types.INITIAL_FETCH, user: data.user });\n  }\n  catch(error) {\n    yield put({ type: types.AUTH_FAIL, error });\n  }    \n}\n\nexport default function* authSagas() {\n  yield takeLatest(types.AUTH, doAuth);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport * as types from '../actions';\nimport API from '../services/api';\n\n\nfunction* fetchTasks(action) {\n    try {\n        const tasks = yield API.fetchTasks();\n        yield put({ type: types.TASKS_FETCH_SUCCESS, tasks })        \n    } catch(ex) {\n        yield put({type: types.TASKS_FETCH_FAIL, error: ex });\n    }\n}\n\nfunction* fetchTasksAuth(action) {\n    try {\n        yield fetchTasks({ user: action.user });\n        // Actions.main();\n        yield put({ type: types.AUTH_SUCCESS, user: action.user });\n    } catch (ex) {\n        yield put({ type: types.AUTH_FAIL, error: ex });\n    }\n}\n\nfunction* addTask(action) {\n    try {\n        const data = yield API.addTask(action.task);\n        \n        const { id, description } = data.task;\n        const uuid = data.uuid;\n\n        yield put({ type: types.TASK_ADD_SUCCESS, task: { id, description, uuid }});\n    } catch(ex) {\n        yield put({ type: types.TASK_ADD_FAIL, error: ex });\n    }\n}\n\nfunction* removeTask(action) {\n    try {\n        yield API.removeTask(action.task);\n        yield put({ type: types.TASK_REMOVE_SUCCESS, task: action.task });\n    } catch (exc) {\n        yield put ({ type: types.TASK_REMOVE_FAIL, error: exc });\n    }\n}\n\nfunction* updateTask(action) {\n    try {\n        const task = yield API.updateTask(action.task);\n        yield put({ type: types.TASK_UPDATE_SUCCESS, task });\n    } catch(ex) {\n        yield put({type: types.TASK_UPDATE_FAIL, error: ex });\n    }\n}\n\nexport default function* () {\n    yield takeEvery(types.INITIAL_FETCH, fetchTasksAuth);\n    yield takeEvery(types.TASKS_FETCH, fetchTasks);\n    yield takeEvery(types.TASK_ADD, addTask);\n    yield takeEvery(types.TASK_REMOVE, removeTask);\n    yield takeEvery(types.TASK_UPDATE, updateTask);\n}","import { takeLatest } from 'redux-saga/effects';\nimport { USER } from '../services/config';\nimport * as types from '../actions';\n\nfunction* signOut() {\n\n    yield USER.clear();\n}\n\nexport default function* () {\n    yield takeLatest(types.SIGN_OUT, signOut);\n}","import * as types from '../actions';\nimport { takeLatest, put } from 'redux-saga/effects';\nimport API from '../services/api';\n\nfunction* signUp(action) {\n    try {\n        const data = yield API.signUp(action.payload);\n        \n        if(!data.access_token) {\n            if(data.name) \n                throw new Error(\"Nome não pode ficar em branco\");\n            if(data.username) \n                throw new Error(\"Usuário não pode ficar em branco\");\n            if(data.password) \n                throw new Error(\"Senha não pode ficar em branco\");\n        }\n            \n\n        API.USER.token = data.access_token;\n        const { username, password } = action.payload;\n        API.USER.storeCredentials({ username, password });\n\n        yield put({ type: types.SIGN_UP_SUCCESS });\n    } catch(error) {\n        yield put({ type: types.SIGN_UP_FAIL, error });\n    }\n}\n\nexport default function* () {\n    yield takeLatest(types.SIGN_UP, signUp);\n}","import  { fork } from 'redux-saga/effects';\nimport authSagas from './auth';\nimport taskSagas from './tasks';\nimport appSagas from './app';\nimport registerSagas from './register';\n\nexport default function* rootSaga() {\n    yield [\n        fork(authSagas),\n        fork(taskSagas),\n        fork(appSagas),\n        fork(registerSagas)\n    ];\n};","import React, { Component } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport  { faCheckSquare, faSignOutAlt, faSquare, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from './components/login';\nimport Register from './components/register';\nimport Main from './components/main';\nimport TaskDetail from './components/task-detail';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers';\n\nimport sagas from './sagas';\nimport createSagaMiddleware from 'redux-saga';\n// import logger from 'redux-logger';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(sagas);\n\nlibrary.add(faCheckSquare, faSignOutAlt, faSquare, faPlus);\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div style={{ height: \"100vh\", width: \"100vw\", backgroundColor: \"#EFEFEF\" }}>\n            <Route path=\"/auth\" exact component={Login}/>        \n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/task-detail\" component={TaskDetail}/>\n            <Route path=\"/\" component={Main}/>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}